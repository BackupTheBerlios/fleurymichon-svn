#############################################################################
# Makefile for building: moker
# Generated by qmake (1.07a) (Qt 3.3.4) on: Thu Apr 20 11:04:30 2006
# Project:  moker.pro
# Template: app
# Command: $(QMAKE) -o Makefile moker.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2  -DQT_NO_DEBUG -DQT_SHARED
CXXFLAGS = -pipe -Wall -W -O2  -DQT_NO_DEBUG -DQT_SHARED
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/share/qt3/mkspecs/default -I. -I/usr/include/qt3
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L/usr/share/qt3/lib -L/usr/X11R6/lib -lqt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = /usr/share/qt3/bin/moc
UIC      = /usr/share/qt3/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = client.h \
		decomparg.h
SOURCES = main.cpp \
		client.cpp \
		decomparg.cpp
OBJECTS = main.o \
		client.o \
		decomparg.o \
		moker.o
FORMS = moker.ui
UICDECLS = moker.h
UICIMPLS = moker.cpp
SRCMOC   = moc_client.cpp \
		moc_moker.cpp
OBJMOC = moc_client.o \
		moc_moker.o
DIST	   = moker.pro
QMAKE_TARGET = moker
DESTDIR  = 
TARGET   = moker

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: moker.pro  /usr/share/qt3/mkspecs/default/qmake.conf /usr/share/qt3/lib/libqt.prl
	$(QMAKE) -o Makefile moker.pro
qmake: 
	@$(QMAKE) -o Makefile moker.pro

dist: 
	@mkdir -p .tmp/moker && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/moker/ && $(COPY_FILE) --parents moker.ui.h .tmp/moker/ && ( cd `dirname .tmp/moker` && $(TAR) moker.tar moker && $(GZIP) moker.tar ) && $(MOVE) `dirname .tmp/moker`/moker.tar.gz . && $(DEL_FILE) -r .tmp/moker

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

main.o: main.cpp moker.h

client.o: client.cpp client.h \
		moker.h

decomparg.o: decomparg.cpp decomparg.h

moker.h: moker.ui 
	$(UIC) moker.ui -o moker.h

moker.cpp: moker.h moker.ui moker.ui.h 
	$(UIC) moker.ui -i moker.h -o moker.cpp

moker.o: moker.cpp moker.ui.h \
		moker.h

moc_client.o: moc_client.cpp  client.h moker.h

moc_moker.o: moc_moker.cpp  moker.h 

moc_client.cpp: $(MOC) client.h
	$(MOC) client.h -o moc_client.cpp

moc_moker.cpp: $(MOC) moker.h
	$(MOC) moker.h -o moc_moker.cpp

####### Install

install:  

uninstall:  

